# coding: utf-8

"""
    Zoom Phone API

    The Zoom Phone API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [OAuth](https://developers.zoom.us/docs/integrations/oauth/) documentation. All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance, you can list all users on an account via `https://api.zoom.us/v2/users/`.  **Note**: You will get `403` response `Zoom Phone has not been enabled for this account` if the phone account is not set up.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AutoReceptionistIdIvrBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'audio_prompt_id': 'str',
        'caller_enters_no_action': 'PhoneautoReceptionistsautoReceptionistIdivrCallerEntersNoAction',
        'holiday_id': 'str',
        'hours_type': 'str',
        'key_action': 'PhoneautoReceptionistsautoReceptionistIdivrKeyAction'
    }

    attribute_map = {
        'audio_prompt_id': 'audio_prompt_id',
        'caller_enters_no_action': 'caller_enters_no_action',
        'holiday_id': 'holiday_id',
        'hours_type': 'hours_type',
        'key_action': 'key_action'
    }

    def __init__(self, audio_prompt_id=None, caller_enters_no_action=None, holiday_id=None, hours_type=None, key_action=None):  # noqa: E501
        """AutoReceptionistIdIvrBody - a model defined in Swagger"""  # noqa: E501
        self._audio_prompt_id = None
        self._caller_enters_no_action = None
        self._holiday_id = None
        self._hours_type = None
        self._key_action = None
        self.discriminator = None
        if audio_prompt_id is not None:
            self.audio_prompt_id = audio_prompt_id
        if caller_enters_no_action is not None:
            self.caller_enters_no_action = caller_enters_no_action
        if holiday_id is not None:
            self.holiday_id = holiday_id
        if hours_type is not None:
            self.hours_type = hours_type
        if key_action is not None:
            self.key_action = key_action

    @property
    def audio_prompt_id(self):
        """Gets the audio_prompt_id of this AutoReceptionistIdIvrBody.  # noqa: E501

        The audio prompt file ID.  # noqa: E501

        :return: The audio_prompt_id of this AutoReceptionistIdIvrBody.  # noqa: E501
        :rtype: str
        """
        return self._audio_prompt_id

    @audio_prompt_id.setter
    def audio_prompt_id(self, audio_prompt_id):
        """Sets the audio_prompt_id of this AutoReceptionistIdIvrBody.

        The audio prompt file ID.  # noqa: E501

        :param audio_prompt_id: The audio_prompt_id of this AutoReceptionistIdIvrBody.  # noqa: E501
        :type: str
        """

        self._audio_prompt_id = audio_prompt_id

    @property
    def caller_enters_no_action(self):
        """Gets the caller_enters_no_action of this AutoReceptionistIdIvrBody.  # noqa: E501


        :return: The caller_enters_no_action of this AutoReceptionistIdIvrBody.  # noqa: E501
        :rtype: PhoneautoReceptionistsautoReceptionistIdivrCallerEntersNoAction
        """
        return self._caller_enters_no_action

    @caller_enters_no_action.setter
    def caller_enters_no_action(self, caller_enters_no_action):
        """Sets the caller_enters_no_action of this AutoReceptionistIdIvrBody.


        :param caller_enters_no_action: The caller_enters_no_action of this AutoReceptionistIdIvrBody.  # noqa: E501
        :type: PhoneautoReceptionistsautoReceptionistIdivrCallerEntersNoAction
        """

        self._caller_enters_no_action = caller_enters_no_action

    @property
    def holiday_id(self):
        """Gets the holiday_id of this AutoReceptionistIdIvrBody.  # noqa: E501

        The auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed, `holiday_id` has a high priority and `hours_type` is invalid.  # noqa: E501

        :return: The holiday_id of this AutoReceptionistIdIvrBody.  # noqa: E501
        :rtype: str
        """
        return self._holiday_id

    @holiday_id.setter
    def holiday_id(self, holiday_id):
        """Sets the holiday_id of this AutoReceptionistIdIvrBody.

        The auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed, `holiday_id` has a high priority and `hours_type` is invalid.  # noqa: E501

        :param holiday_id: The holiday_id of this AutoReceptionistIdIvrBody.  # noqa: E501
        :type: str
        """

        self._holiday_id = holiday_id

    @property
    def hours_type(self):
        """Gets the hours_type of this AutoReceptionistIdIvrBody.  # noqa: E501

        Hours type: `business_hours` (default) or `closed_hours`.  # noqa: E501

        :return: The hours_type of this AutoReceptionistIdIvrBody.  # noqa: E501
        :rtype: str
        """
        return self._hours_type

    @hours_type.setter
    def hours_type(self, hours_type):
        """Sets the hours_type of this AutoReceptionistIdIvrBody.

        Hours type: `business_hours` (default) or `closed_hours`.  # noqa: E501

        :param hours_type: The hours_type of this AutoReceptionistIdIvrBody.  # noqa: E501
        :type: str
        """

        self._hours_type = hours_type

    @property
    def key_action(self):
        """Gets the key_action of this AutoReceptionistIdIvrBody.  # noqa: E501


        :return: The key_action of this AutoReceptionistIdIvrBody.  # noqa: E501
        :rtype: PhoneautoReceptionistsautoReceptionistIdivrKeyAction
        """
        return self._key_action

    @key_action.setter
    def key_action(self, key_action):
        """Sets the key_action of this AutoReceptionistIdIvrBody.


        :param key_action: The key_action of this AutoReceptionistIdIvrBody.  # noqa: E501
        :type: PhoneautoReceptionistsautoReceptionistIdivrKeyAction
        """

        self._key_action = key_action

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AutoReceptionistIdIvrBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AutoReceptionistIdIvrBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
