# coding: utf-8

"""
    Zoom Phone API

    The Zoom Phone API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [OAuth](https://developers.zoom.us/docs/integrations/oauth/) documentation. All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance, you can list all users on an account via `https://api.zoom.us/v2/users/`.  **Note**: You will get `403` response `Zoom Phone has not been enabled for this account` if the phone account is not set up.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PhoneSharedLineGroupsBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description': 'str',
        'display_name': 'str',
        'extension_number': 'int',
        'site_id': 'str'
    }

    attribute_map = {
        'description': 'description',
        'display_name': 'display_name',
        'extension_number': 'extension_number',
        'site_id': 'site_id'
    }

    def __init__(self, description=None, display_name=None, extension_number=None, site_id=None):  # noqa: E501
        """PhoneSharedLineGroupsBody - a model defined in Swagger"""  # noqa: E501
        self._description = None
        self._display_name = None
        self._extension_number = None
        self._site_id = None
        self.discriminator = None
        if description is not None:
            self.description = description
        self.display_name = display_name
        if extension_number is not None:
            self.extension_number = extension_number
        if site_id is not None:
            self.site_id = site_id

    @property
    def description(self):
        """Gets the description of this PhoneSharedLineGroupsBody.  # noqa: E501

        This field provides a description for the shared line group.  # noqa: E501

        :return: The description of this PhoneSharedLineGroupsBody.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PhoneSharedLineGroupsBody.

        This field provides a description for the shared line group.  # noqa: E501

        :param description: The description of this PhoneSharedLineGroupsBody.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this PhoneSharedLineGroupsBody.  # noqa: E501

        This field provides a name to help identify the shared line group.  # noqa: E501

        :return: The display_name of this PhoneSharedLineGroupsBody.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this PhoneSharedLineGroupsBody.

        This field provides a name to help identify the shared line group.  # noqa: E501

        :param display_name: The display_name of this PhoneSharedLineGroupsBody.  # noqa: E501
        :type: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")  # noqa: E501

        self._display_name = display_name

    @property
    def extension_number(self):
        """Gets the extension_number of this PhoneSharedLineGroupsBody.  # noqa: E501

        The extension number to be assigned to the shared line group. If a [site code has been assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number   # noqa: E501

        :return: The extension_number of this PhoneSharedLineGroupsBody.  # noqa: E501
        :rtype: int
        """
        return self._extension_number

    @extension_number.setter
    def extension_number(self, extension_number):
        """Sets the extension_number of this PhoneSharedLineGroupsBody.

        The extension number to be assigned to the shared line group. If a [site code has been assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number   # noqa: E501

        :param extension_number: The extension_number of this PhoneSharedLineGroupsBody.  # noqa: E501
        :type: int
        """

        self._extension_number = extension_number

    @property
    def site_id(self):
        """Gets the site_id of this PhoneSharedLineGroupsBody.  # noqa: E501

        The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the shared line group. You will only be able to add members that belong to this site to the shared line group.  This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.  # noqa: E501

        :return: The site_id of this PhoneSharedLineGroupsBody.  # noqa: E501
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this PhoneSharedLineGroupsBody.

        The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the shared line group. You will only be able to add members that belong to this site to the shared line group.  This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.  # noqa: E501

        :param site_id: The site_id of this PhoneSharedLineGroupsBody.  # noqa: E501
        :type: str
        """

        self._site_id = site_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PhoneSharedLineGroupsBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PhoneSharedLineGroupsBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
