# coding: utf-8

"""
    Zoom Phone API

    The Zoom Phone API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [OAuth](https://developers.zoom.us/docs/integrations/oauth/) documentation. All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance, you can list all users on an account via `https://api.zoom.us/v2/users/`.  **Note**: You will get `403` response `Zoom Phone has not been enabled for this account` if the phone account is not set up.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'include_voicemail_file': 'bool',
        'include_voicemail_transcription': 'bool',
        'forward_voicemail_to_email': 'bool',
        'enable': 'bool',
        'reset': 'bool'
    }

    attribute_map = {
        'include_voicemail_file': 'include_voicemail_file',
        'include_voicemail_transcription': 'include_voicemail_transcription',
        'forward_voicemail_to_email': 'forward_voicemail_to_email',
        'enable': 'enable',
        'reset': 'reset'
    }

    def __init__(self, include_voicemail_file=None, include_voicemail_transcription=None, forward_voicemail_to_email=None, enable=None, reset=None):  # noqa: E501
        """PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail - a model defined in Swagger"""  # noqa: E501
        self._include_voicemail_file = None
        self._include_voicemail_transcription = None
        self._forward_voicemail_to_email = None
        self._enable = None
        self._reset = None
        self.discriminator = None
        if include_voicemail_file is not None:
            self.include_voicemail_file = include_voicemail_file
        if include_voicemail_transcription is not None:
            self.include_voicemail_transcription = include_voicemail_transcription
        if forward_voicemail_to_email is not None:
            self.forward_voicemail_to_email = forward_voicemail_to_email
        if enable is not None:
            self.enable = enable
        if reset is not None:
            self.reset = reset

    @property
    def include_voicemail_file(self):
        """Gets the include_voicemail_file of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501

        Whether to include the voicemail file.  # noqa: E501

        :return: The include_voicemail_file of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :rtype: bool
        """
        return self._include_voicemail_file

    @include_voicemail_file.setter
    def include_voicemail_file(self, include_voicemail_file):
        """Sets the include_voicemail_file of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.

        Whether to include the voicemail file.  # noqa: E501

        :param include_voicemail_file: The include_voicemail_file of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :type: bool
        """

        self._include_voicemail_file = include_voicemail_file

    @property
    def include_voicemail_transcription(self):
        """Gets the include_voicemail_transcription of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501

        Whether to include the voicemail transcription.  # noqa: E501

        :return: The include_voicemail_transcription of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :rtype: bool
        """
        return self._include_voicemail_transcription

    @include_voicemail_transcription.setter
    def include_voicemail_transcription(self, include_voicemail_transcription):
        """Sets the include_voicemail_transcription of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.

        Whether to include the voicemail transcription.  # noqa: E501

        :param include_voicemail_transcription: The include_voicemail_transcription of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :type: bool
        """

        self._include_voicemail_transcription = include_voicemail_transcription

    @property
    def forward_voicemail_to_email(self):
        """Gets the forward_voicemail_to_email of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501

        Whether to forward the voicemail to email.  # noqa: E501

        :return: The forward_voicemail_to_email of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :rtype: bool
        """
        return self._forward_voicemail_to_email

    @forward_voicemail_to_email.setter
    def forward_voicemail_to_email(self, forward_voicemail_to_email):
        """Sets the forward_voicemail_to_email of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.

        Whether to forward the voicemail to email.  # noqa: E501

        :param forward_voicemail_to_email: The forward_voicemail_to_email of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :type: bool
        """

        self._forward_voicemail_to_email = forward_voicemail_to_email

    @property
    def enable(self):
        """Gets the enable of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501


        :return: The enable of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :rtype: bool
        """
        return self._enable

    @enable.setter
    def enable(self, enable):
        """Sets the enable of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.


        :param enable: The enable of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :type: bool
        """

        self._enable = enable

    @property
    def reset(self):
        """Gets the reset of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501

        Whether the current settings will use the phone account's settings (applicable if the current settings are using the new policy framework).  # noqa: E501

        :return: The reset of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :rtype: bool
        """
        return self._reset

    @reset.setter
    def reset(self, reset):
        """Sets the reset of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.

        Whether the current settings will use the phone account's settings (applicable if the current settings are using the new policy framework).  # noqa: E501

        :param reset: The reset of this PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail.  # noqa: E501
        :type: bool
        """

        self._reset = reset

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PhoneautoReceptionistsautoReceptionistIdpoliciesVoicemailNotificationByEmail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
