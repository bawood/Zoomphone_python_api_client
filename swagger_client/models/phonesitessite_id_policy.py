# coding: utf-8

"""
    Zoom Phone API

    The Zoom Phone API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [OAuth](https://developers.zoom.us/docs/integrations/oauth/) documentation. All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance, you can list all users on an account via `https://api.zoom.us/v2/users/`.  **Note**: You will get `403` response `Zoom Phone has not been enabled for this account` if the phone account is not set up.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PhonesitessiteIdPolicy(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'select_outbound_caller_id': 'PhonesitessiteIdPolicySelectOutboundCallerId',
        'personal_audio_library': 'PhonesitessiteIdPolicyPersonalAudioLibrary',
        'voicemail': 'PhonesitessiteIdPolicyVoicemail',
        'voicemail_transcription': 'PhonesitessiteIdPolicyVoicemailTranscription',
        'voicemail_notification_by_email': 'PhonesitessiteIdPolicyVoicemailNotificationByEmail',
        'shared_voicemail_notification_by_email': 'PhonesitessiteIdPolicySharedVoicemailNotificationByEmail',
        'international_calling': 'PhonesitessiteIdPolicyInternationalCalling',
        'zoom_phone_on_mobile': 'PhonesitessiteIdPolicyZoomPhoneOnMobile',
        'sms': 'PhonesitessiteIdPolicySms',
        'elevate_to_meeting': 'PhonesitessiteIdPolicyElevateToMeeting',
        'hand_off_to_room': 'PhonesitessiteIdPolicyHandOffToRoom',
        'mobile_switch_to_carrier': 'PhonesitessiteIdPolicyMobileSwitchToCarrier',
        'delegation': 'PhonesitessiteIdPolicyDelegation',
        'ad_hoc_call_recording': 'PhonesitessiteIdPolicyAdHocCallRecording',
        'auto_call_recording': 'PhonesitessiteIdPolicyAutoCallRecording',
        'call_handling_forwarding_to_other_users': 'PhonesitessiteIdPolicyCallHandlingForwardingToOtherUsers',
        'check_voicemails_over_phone': 'PhonesitessiteIdPolicyCheckVoicemailsOverPhone',
        'call_queue_pickup_code': 'PhonesitessiteIdPolicyCallQueuePickupCode',
        'call_queue_opt_out_reason': 'PhonesitessiteIdPolicyCallQueueOptOutReason',
        'show_user_last_transferred_call': 'bool',
        'auto_delete_data_after_retention_duration': 'PhonesitessiteIdPolicyAutoDeleteDataAfterRetentionDuration',
        'call_park': 'PhonesitessiteIdPolicyCallPark',
        'call_overflow': 'PhonesitessiteIdPolicyCallOverflow',
        'call_transferring': 'PhonesitessiteIdPolicyCallTransferring',
        'audio_intercom': 'PhonesitessiteIdPolicyAudioIntercom',
        'block_calls_without_caller_id': 'PhonesitessiteIdPolicyBlockCallsWithoutCallerId',
        'block_external_calls': 'PhonesitessiteIdPolicyBlockExternalCalls'
    }

    attribute_map = {
        'select_outbound_caller_id': 'select_outbound_caller_id',
        'personal_audio_library': 'personal_audio_library',
        'voicemail': 'voicemail',
        'voicemail_transcription': 'voicemail_transcription',
        'voicemail_notification_by_email': 'voicemail_notification_by_email',
        'shared_voicemail_notification_by_email': 'shared_voicemail_notification_by_email',
        'international_calling': 'international_calling',
        'zoom_phone_on_mobile': 'zoom_phone_on_mobile',
        'sms': 'sms',
        'elevate_to_meeting': 'elevate_to_meeting',
        'hand_off_to_room': 'hand_off_to_room',
        'mobile_switch_to_carrier': 'mobile_switch_to_carrier',
        'delegation': 'delegation',
        'ad_hoc_call_recording': 'ad_hoc_call_recording',
        'auto_call_recording': 'auto_call_recording',
        'call_handling_forwarding_to_other_users': 'call_handling_forwarding_to_other_users',
        'check_voicemails_over_phone': 'check_voicemails_over_phone',
        'call_queue_pickup_code': 'call_queue_pickup_code',
        'call_queue_opt_out_reason': 'call_queue_opt_out_reason',
        'show_user_last_transferred_call': 'show_user_last_transferred_call',
        'auto_delete_data_after_retention_duration': 'auto_delete_data_after_retention_duration',
        'call_park': 'call_park',
        'call_overflow': 'call_overflow',
        'call_transferring': 'call_transferring',
        'audio_intercom': 'audio_intercom',
        'block_calls_without_caller_id': 'block_calls_without_caller_id',
        'block_external_calls': 'block_external_calls'
    }

    def __init__(self, select_outbound_caller_id=None, personal_audio_library=None, voicemail=None, voicemail_transcription=None, voicemail_notification_by_email=None, shared_voicemail_notification_by_email=None, international_calling=None, zoom_phone_on_mobile=None, sms=None, elevate_to_meeting=None, hand_off_to_room=None, mobile_switch_to_carrier=None, delegation=None, ad_hoc_call_recording=None, auto_call_recording=None, call_handling_forwarding_to_other_users=None, check_voicemails_over_phone=None, call_queue_pickup_code=None, call_queue_opt_out_reason=None, show_user_last_transferred_call=None, auto_delete_data_after_retention_duration=None, call_park=None, call_overflow=None, call_transferring=None, audio_intercom=None, block_calls_without_caller_id=None, block_external_calls=None):  # noqa: E501
        """PhonesitessiteIdPolicy - a model defined in Swagger"""  # noqa: E501
        self._select_outbound_caller_id = None
        self._personal_audio_library = None
        self._voicemail = None
        self._voicemail_transcription = None
        self._voicemail_notification_by_email = None
        self._shared_voicemail_notification_by_email = None
        self._international_calling = None
        self._zoom_phone_on_mobile = None
        self._sms = None
        self._elevate_to_meeting = None
        self._hand_off_to_room = None
        self._mobile_switch_to_carrier = None
        self._delegation = None
        self._ad_hoc_call_recording = None
        self._auto_call_recording = None
        self._call_handling_forwarding_to_other_users = None
        self._check_voicemails_over_phone = None
        self._call_queue_pickup_code = None
        self._call_queue_opt_out_reason = None
        self._show_user_last_transferred_call = None
        self._auto_delete_data_after_retention_duration = None
        self._call_park = None
        self._call_overflow = None
        self._call_transferring = None
        self._audio_intercom = None
        self._block_calls_without_caller_id = None
        self._block_external_calls = None
        self.discriminator = None
        if select_outbound_caller_id is not None:
            self.select_outbound_caller_id = select_outbound_caller_id
        if personal_audio_library is not None:
            self.personal_audio_library = personal_audio_library
        if voicemail is not None:
            self.voicemail = voicemail
        if voicemail_transcription is not None:
            self.voicemail_transcription = voicemail_transcription
        if voicemail_notification_by_email is not None:
            self.voicemail_notification_by_email = voicemail_notification_by_email
        if shared_voicemail_notification_by_email is not None:
            self.shared_voicemail_notification_by_email = shared_voicemail_notification_by_email
        if international_calling is not None:
            self.international_calling = international_calling
        if zoom_phone_on_mobile is not None:
            self.zoom_phone_on_mobile = zoom_phone_on_mobile
        if sms is not None:
            self.sms = sms
        if elevate_to_meeting is not None:
            self.elevate_to_meeting = elevate_to_meeting
        if hand_off_to_room is not None:
            self.hand_off_to_room = hand_off_to_room
        if mobile_switch_to_carrier is not None:
            self.mobile_switch_to_carrier = mobile_switch_to_carrier
        if delegation is not None:
            self.delegation = delegation
        if ad_hoc_call_recording is not None:
            self.ad_hoc_call_recording = ad_hoc_call_recording
        if auto_call_recording is not None:
            self.auto_call_recording = auto_call_recording
        if call_handling_forwarding_to_other_users is not None:
            self.call_handling_forwarding_to_other_users = call_handling_forwarding_to_other_users
        if check_voicemails_over_phone is not None:
            self.check_voicemails_over_phone = check_voicemails_over_phone
        if call_queue_pickup_code is not None:
            self.call_queue_pickup_code = call_queue_pickup_code
        if call_queue_opt_out_reason is not None:
            self.call_queue_opt_out_reason = call_queue_opt_out_reason
        if show_user_last_transferred_call is not None:
            self.show_user_last_transferred_call = show_user_last_transferred_call
        if auto_delete_data_after_retention_duration is not None:
            self.auto_delete_data_after_retention_duration = auto_delete_data_after_retention_duration
        if call_park is not None:
            self.call_park = call_park
        if call_overflow is not None:
            self.call_overflow = call_overflow
        if call_transferring is not None:
            self.call_transferring = call_transferring
        if audio_intercom is not None:
            self.audio_intercom = audio_intercom
        if block_calls_without_caller_id is not None:
            self.block_calls_without_caller_id = block_calls_without_caller_id
        if block_external_calls is not None:
            self.block_external_calls = block_external_calls

    @property
    def select_outbound_caller_id(self):
        """Gets the select_outbound_caller_id of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The select_outbound_caller_id of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicySelectOutboundCallerId
        """
        return self._select_outbound_caller_id

    @select_outbound_caller_id.setter
    def select_outbound_caller_id(self, select_outbound_caller_id):
        """Sets the select_outbound_caller_id of this PhonesitessiteIdPolicy.


        :param select_outbound_caller_id: The select_outbound_caller_id of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicySelectOutboundCallerId
        """

        self._select_outbound_caller_id = select_outbound_caller_id

    @property
    def personal_audio_library(self):
        """Gets the personal_audio_library of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The personal_audio_library of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyPersonalAudioLibrary
        """
        return self._personal_audio_library

    @personal_audio_library.setter
    def personal_audio_library(self, personal_audio_library):
        """Sets the personal_audio_library of this PhonesitessiteIdPolicy.


        :param personal_audio_library: The personal_audio_library of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyPersonalAudioLibrary
        """

        self._personal_audio_library = personal_audio_library

    @property
    def voicemail(self):
        """Gets the voicemail of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The voicemail of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyVoicemail
        """
        return self._voicemail

    @voicemail.setter
    def voicemail(self, voicemail):
        """Sets the voicemail of this PhonesitessiteIdPolicy.


        :param voicemail: The voicemail of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyVoicemail
        """

        self._voicemail = voicemail

    @property
    def voicemail_transcription(self):
        """Gets the voicemail_transcription of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The voicemail_transcription of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyVoicemailTranscription
        """
        return self._voicemail_transcription

    @voicemail_transcription.setter
    def voicemail_transcription(self, voicemail_transcription):
        """Sets the voicemail_transcription of this PhonesitessiteIdPolicy.


        :param voicemail_transcription: The voicemail_transcription of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyVoicemailTranscription
        """

        self._voicemail_transcription = voicemail_transcription

    @property
    def voicemail_notification_by_email(self):
        """Gets the voicemail_notification_by_email of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The voicemail_notification_by_email of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyVoicemailNotificationByEmail
        """
        return self._voicemail_notification_by_email

    @voicemail_notification_by_email.setter
    def voicemail_notification_by_email(self, voicemail_notification_by_email):
        """Sets the voicemail_notification_by_email of this PhonesitessiteIdPolicy.


        :param voicemail_notification_by_email: The voicemail_notification_by_email of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyVoicemailNotificationByEmail
        """

        self._voicemail_notification_by_email = voicemail_notification_by_email

    @property
    def shared_voicemail_notification_by_email(self):
        """Gets the shared_voicemail_notification_by_email of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The shared_voicemail_notification_by_email of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicySharedVoicemailNotificationByEmail
        """
        return self._shared_voicemail_notification_by_email

    @shared_voicemail_notification_by_email.setter
    def shared_voicemail_notification_by_email(self, shared_voicemail_notification_by_email):
        """Sets the shared_voicemail_notification_by_email of this PhonesitessiteIdPolicy.


        :param shared_voicemail_notification_by_email: The shared_voicemail_notification_by_email of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicySharedVoicemailNotificationByEmail
        """

        self._shared_voicemail_notification_by_email = shared_voicemail_notification_by_email

    @property
    def international_calling(self):
        """Gets the international_calling of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The international_calling of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyInternationalCalling
        """
        return self._international_calling

    @international_calling.setter
    def international_calling(self, international_calling):
        """Sets the international_calling of this PhonesitessiteIdPolicy.


        :param international_calling: The international_calling of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyInternationalCalling
        """

        self._international_calling = international_calling

    @property
    def zoom_phone_on_mobile(self):
        """Gets the zoom_phone_on_mobile of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The zoom_phone_on_mobile of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyZoomPhoneOnMobile
        """
        return self._zoom_phone_on_mobile

    @zoom_phone_on_mobile.setter
    def zoom_phone_on_mobile(self, zoom_phone_on_mobile):
        """Sets the zoom_phone_on_mobile of this PhonesitessiteIdPolicy.


        :param zoom_phone_on_mobile: The zoom_phone_on_mobile of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyZoomPhoneOnMobile
        """

        self._zoom_phone_on_mobile = zoom_phone_on_mobile

    @property
    def sms(self):
        """Gets the sms of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The sms of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicySms
        """
        return self._sms

    @sms.setter
    def sms(self, sms):
        """Sets the sms of this PhonesitessiteIdPolicy.


        :param sms: The sms of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicySms
        """

        self._sms = sms

    @property
    def elevate_to_meeting(self):
        """Gets the elevate_to_meeting of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The elevate_to_meeting of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyElevateToMeeting
        """
        return self._elevate_to_meeting

    @elevate_to_meeting.setter
    def elevate_to_meeting(self, elevate_to_meeting):
        """Sets the elevate_to_meeting of this PhonesitessiteIdPolicy.


        :param elevate_to_meeting: The elevate_to_meeting of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyElevateToMeeting
        """

        self._elevate_to_meeting = elevate_to_meeting

    @property
    def hand_off_to_room(self):
        """Gets the hand_off_to_room of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The hand_off_to_room of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyHandOffToRoom
        """
        return self._hand_off_to_room

    @hand_off_to_room.setter
    def hand_off_to_room(self, hand_off_to_room):
        """Sets the hand_off_to_room of this PhonesitessiteIdPolicy.


        :param hand_off_to_room: The hand_off_to_room of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyHandOffToRoom
        """

        self._hand_off_to_room = hand_off_to_room

    @property
    def mobile_switch_to_carrier(self):
        """Gets the mobile_switch_to_carrier of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The mobile_switch_to_carrier of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyMobileSwitchToCarrier
        """
        return self._mobile_switch_to_carrier

    @mobile_switch_to_carrier.setter
    def mobile_switch_to_carrier(self, mobile_switch_to_carrier):
        """Sets the mobile_switch_to_carrier of this PhonesitessiteIdPolicy.


        :param mobile_switch_to_carrier: The mobile_switch_to_carrier of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyMobileSwitchToCarrier
        """

        self._mobile_switch_to_carrier = mobile_switch_to_carrier

    @property
    def delegation(self):
        """Gets the delegation of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The delegation of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyDelegation
        """
        return self._delegation

    @delegation.setter
    def delegation(self, delegation):
        """Sets the delegation of this PhonesitessiteIdPolicy.


        :param delegation: The delegation of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyDelegation
        """

        self._delegation = delegation

    @property
    def ad_hoc_call_recording(self):
        """Gets the ad_hoc_call_recording of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The ad_hoc_call_recording of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyAdHocCallRecording
        """
        return self._ad_hoc_call_recording

    @ad_hoc_call_recording.setter
    def ad_hoc_call_recording(self, ad_hoc_call_recording):
        """Sets the ad_hoc_call_recording of this PhonesitessiteIdPolicy.


        :param ad_hoc_call_recording: The ad_hoc_call_recording of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyAdHocCallRecording
        """

        self._ad_hoc_call_recording = ad_hoc_call_recording

    @property
    def auto_call_recording(self):
        """Gets the auto_call_recording of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The auto_call_recording of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyAutoCallRecording
        """
        return self._auto_call_recording

    @auto_call_recording.setter
    def auto_call_recording(self, auto_call_recording):
        """Sets the auto_call_recording of this PhonesitessiteIdPolicy.


        :param auto_call_recording: The auto_call_recording of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyAutoCallRecording
        """

        self._auto_call_recording = auto_call_recording

    @property
    def call_handling_forwarding_to_other_users(self):
        """Gets the call_handling_forwarding_to_other_users of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The call_handling_forwarding_to_other_users of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCallHandlingForwardingToOtherUsers
        """
        return self._call_handling_forwarding_to_other_users

    @call_handling_forwarding_to_other_users.setter
    def call_handling_forwarding_to_other_users(self, call_handling_forwarding_to_other_users):
        """Sets the call_handling_forwarding_to_other_users of this PhonesitessiteIdPolicy.


        :param call_handling_forwarding_to_other_users: The call_handling_forwarding_to_other_users of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCallHandlingForwardingToOtherUsers
        """

        self._call_handling_forwarding_to_other_users = call_handling_forwarding_to_other_users

    @property
    def check_voicemails_over_phone(self):
        """Gets the check_voicemails_over_phone of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The check_voicemails_over_phone of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCheckVoicemailsOverPhone
        """
        return self._check_voicemails_over_phone

    @check_voicemails_over_phone.setter
    def check_voicemails_over_phone(self, check_voicemails_over_phone):
        """Sets the check_voicemails_over_phone of this PhonesitessiteIdPolicy.


        :param check_voicemails_over_phone: The check_voicemails_over_phone of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCheckVoicemailsOverPhone
        """

        self._check_voicemails_over_phone = check_voicemails_over_phone

    @property
    def call_queue_pickup_code(self):
        """Gets the call_queue_pickup_code of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The call_queue_pickup_code of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCallQueuePickupCode
        """
        return self._call_queue_pickup_code

    @call_queue_pickup_code.setter
    def call_queue_pickup_code(self, call_queue_pickup_code):
        """Sets the call_queue_pickup_code of this PhonesitessiteIdPolicy.


        :param call_queue_pickup_code: The call_queue_pickup_code of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCallQueuePickupCode
        """

        self._call_queue_pickup_code = call_queue_pickup_code

    @property
    def call_queue_opt_out_reason(self):
        """Gets the call_queue_opt_out_reason of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The call_queue_opt_out_reason of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCallQueueOptOutReason
        """
        return self._call_queue_opt_out_reason

    @call_queue_opt_out_reason.setter
    def call_queue_opt_out_reason(self, call_queue_opt_out_reason):
        """Sets the call_queue_opt_out_reason of this PhonesitessiteIdPolicy.


        :param call_queue_opt_out_reason: The call_queue_opt_out_reason of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCallQueueOptOutReason
        """

        self._call_queue_opt_out_reason = call_queue_opt_out_reason

    @property
    def show_user_last_transferred_call(self):
        """Gets the show_user_last_transferred_call of this PhonesitessiteIdPolicy.  # noqa: E501

        Whether to show the user who last transferred the call. Viewing preferences will be shown on the incoming call panel. Selections made here will not affect the information shown in call logs.  # noqa: E501

        :return: The show_user_last_transferred_call of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._show_user_last_transferred_call

    @show_user_last_transferred_call.setter
    def show_user_last_transferred_call(self, show_user_last_transferred_call):
        """Sets the show_user_last_transferred_call of this PhonesitessiteIdPolicy.

        Whether to show the user who last transferred the call. Viewing preferences will be shown on the incoming call panel. Selections made here will not affect the information shown in call logs.  # noqa: E501

        :param show_user_last_transferred_call: The show_user_last_transferred_call of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: bool
        """

        self._show_user_last_transferred_call = show_user_last_transferred_call

    @property
    def auto_delete_data_after_retention_duration(self):
        """Gets the auto_delete_data_after_retention_duration of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The auto_delete_data_after_retention_duration of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyAutoDeleteDataAfterRetentionDuration
        """
        return self._auto_delete_data_after_retention_duration

    @auto_delete_data_after_retention_duration.setter
    def auto_delete_data_after_retention_duration(self, auto_delete_data_after_retention_duration):
        """Sets the auto_delete_data_after_retention_duration of this PhonesitessiteIdPolicy.


        :param auto_delete_data_after_retention_duration: The auto_delete_data_after_retention_duration of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyAutoDeleteDataAfterRetentionDuration
        """

        self._auto_delete_data_after_retention_duration = auto_delete_data_after_retention_duration

    @property
    def call_park(self):
        """Gets the call_park of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The call_park of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCallPark
        """
        return self._call_park

    @call_park.setter
    def call_park(self, call_park):
        """Sets the call_park of this PhonesitessiteIdPolicy.


        :param call_park: The call_park of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCallPark
        """

        self._call_park = call_park

    @property
    def call_overflow(self):
        """Gets the call_overflow of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The call_overflow of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCallOverflow
        """
        return self._call_overflow

    @call_overflow.setter
    def call_overflow(self, call_overflow):
        """Sets the call_overflow of this PhonesitessiteIdPolicy.


        :param call_overflow: The call_overflow of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCallOverflow
        """

        self._call_overflow = call_overflow

    @property
    def call_transferring(self):
        """Gets the call_transferring of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The call_transferring of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyCallTransferring
        """
        return self._call_transferring

    @call_transferring.setter
    def call_transferring(self, call_transferring):
        """Sets the call_transferring of this PhonesitessiteIdPolicy.


        :param call_transferring: The call_transferring of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyCallTransferring
        """

        self._call_transferring = call_transferring

    @property
    def audio_intercom(self):
        """Gets the audio_intercom of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The audio_intercom of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyAudioIntercom
        """
        return self._audio_intercom

    @audio_intercom.setter
    def audio_intercom(self, audio_intercom):
        """Sets the audio_intercom of this PhonesitessiteIdPolicy.


        :param audio_intercom: The audio_intercom of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyAudioIntercom
        """

        self._audio_intercom = audio_intercom

    @property
    def block_calls_without_caller_id(self):
        """Gets the block_calls_without_caller_id of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The block_calls_without_caller_id of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyBlockCallsWithoutCallerId
        """
        return self._block_calls_without_caller_id

    @block_calls_without_caller_id.setter
    def block_calls_without_caller_id(self, block_calls_without_caller_id):
        """Sets the block_calls_without_caller_id of this PhonesitessiteIdPolicy.


        :param block_calls_without_caller_id: The block_calls_without_caller_id of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyBlockCallsWithoutCallerId
        """

        self._block_calls_without_caller_id = block_calls_without_caller_id

    @property
    def block_external_calls(self):
        """Gets the block_external_calls of this PhonesitessiteIdPolicy.  # noqa: E501


        :return: The block_external_calls of this PhonesitessiteIdPolicy.  # noqa: E501
        :rtype: PhonesitessiteIdPolicyBlockExternalCalls
        """
        return self._block_external_calls

    @block_external_calls.setter
    def block_external_calls(self, block_external_calls):
        """Sets the block_external_calls of this PhonesitessiteIdPolicy.


        :param block_external_calls: The block_external_calls of this PhonesitessiteIdPolicy.  # noqa: E501
        :type: PhonesitessiteIdPolicyBlockExternalCalls
        """

        self._block_external_calls = block_external_calls

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PhonesitessiteIdPolicy, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PhonesitessiteIdPolicy):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
