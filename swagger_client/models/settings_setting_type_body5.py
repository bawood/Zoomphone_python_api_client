# coding: utf-8

"""
    Zoom Phone API

    The Zoom Phone API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [OAuth](https://developers.zoom.us/docs/integrations/oauth/) documentation. All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance, you can list all users on an account via `https://api.zoom.us/v2/users/`.  **Note**: You will get `403` response `Zoom Phone has not been enabled for this account` if the phone account is not set up.  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SettingsSettingTypeBody5(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'location_based_routing': 'PhonesitessiteIdsettingssettingTypeLocationBasedRouting',
        'business_hours': 'PhonesitessiteIdsettingssettingTypeBusinessHours',
        'closed_hours': 'PhonesitessiteIdsettingssettingTypeClosedHours',
        'holiday_hours': 'PhonesitessiteIdsettingssettingTypeHolidayHours',
        'outbound_caller_id': 'PhonesitessiteIdsettingssettingTypeOutboundCallerId',
        'audio_prompt': 'PhonesitessiteIdsettingssettingTypeAudioPrompt',
        'desk_phone': 'PhonesitessiteIdsettingssettingTypeDeskPhone',
        'dial_by_name': 'PhonesitessiteIdsettingssettingTypeDialByName',
        'billing_account': 'PhonesettingsBillingAccount'
    }

    attribute_map = {
        'location_based_routing': 'location_based_routing',
        'business_hours': 'business_hours',
        'closed_hours': 'closed_hours',
        'holiday_hours': 'holiday_hours',
        'outbound_caller_id': 'outbound_caller_id',
        'audio_prompt': 'audio_prompt',
        'desk_phone': 'desk_phone',
        'dial_by_name': 'dial_by_name',
        'billing_account': 'billing_account'
    }

    def __init__(self, location_based_routing=None, business_hours=None, closed_hours=None, holiday_hours=None, outbound_caller_id=None, audio_prompt=None, desk_phone=None, dial_by_name=None, billing_account=None):  # noqa: E501
        """SettingsSettingTypeBody5 - a model defined in Swagger"""  # noqa: E501
        self._location_based_routing = None
        self._business_hours = None
        self._closed_hours = None
        self._holiday_hours = None
        self._outbound_caller_id = None
        self._audio_prompt = None
        self._desk_phone = None
        self._dial_by_name = None
        self._billing_account = None
        self.discriminator = None
        if location_based_routing is not None:
            self.location_based_routing = location_based_routing
        if business_hours is not None:
            self.business_hours = business_hours
        if closed_hours is not None:
            self.closed_hours = closed_hours
        if holiday_hours is not None:
            self.holiday_hours = holiday_hours
        if outbound_caller_id is not None:
            self.outbound_caller_id = outbound_caller_id
        if audio_prompt is not None:
            self.audio_prompt = audio_prompt
        if desk_phone is not None:
            self.desk_phone = desk_phone
        if dial_by_name is not None:
            self.dial_by_name = dial_by_name
        if billing_account is not None:
            self.billing_account = billing_account

    @property
    def location_based_routing(self):
        """Gets the location_based_routing of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The location_based_routing of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeLocationBasedRouting
        """
        return self._location_based_routing

    @location_based_routing.setter
    def location_based_routing(self, location_based_routing):
        """Sets the location_based_routing of this SettingsSettingTypeBody5.


        :param location_based_routing: The location_based_routing of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeLocationBasedRouting
        """

        self._location_based_routing = location_based_routing

    @property
    def business_hours(self):
        """Gets the business_hours of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The business_hours of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeBusinessHours
        """
        return self._business_hours

    @business_hours.setter
    def business_hours(self, business_hours):
        """Sets the business_hours of this SettingsSettingTypeBody5.


        :param business_hours: The business_hours of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeBusinessHours
        """

        self._business_hours = business_hours

    @property
    def closed_hours(self):
        """Gets the closed_hours of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The closed_hours of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeClosedHours
        """
        return self._closed_hours

    @closed_hours.setter
    def closed_hours(self, closed_hours):
        """Sets the closed_hours of this SettingsSettingTypeBody5.


        :param closed_hours: The closed_hours of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeClosedHours
        """

        self._closed_hours = closed_hours

    @property
    def holiday_hours(self):
        """Gets the holiday_hours of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The holiday_hours of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeHolidayHours
        """
        return self._holiday_hours

    @holiday_hours.setter
    def holiday_hours(self, holiday_hours):
        """Sets the holiday_hours of this SettingsSettingTypeBody5.


        :param holiday_hours: The holiday_hours of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeHolidayHours
        """

        self._holiday_hours = holiday_hours

    @property
    def outbound_caller_id(self):
        """Gets the outbound_caller_id of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The outbound_caller_id of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeOutboundCallerId
        """
        return self._outbound_caller_id

    @outbound_caller_id.setter
    def outbound_caller_id(self, outbound_caller_id):
        """Sets the outbound_caller_id of this SettingsSettingTypeBody5.


        :param outbound_caller_id: The outbound_caller_id of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeOutboundCallerId
        """

        self._outbound_caller_id = outbound_caller_id

    @property
    def audio_prompt(self):
        """Gets the audio_prompt of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The audio_prompt of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeAudioPrompt
        """
        return self._audio_prompt

    @audio_prompt.setter
    def audio_prompt(self, audio_prompt):
        """Sets the audio_prompt of this SettingsSettingTypeBody5.


        :param audio_prompt: The audio_prompt of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeAudioPrompt
        """

        self._audio_prompt = audio_prompt

    @property
    def desk_phone(self):
        """Gets the desk_phone of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The desk_phone of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeDeskPhone
        """
        return self._desk_phone

    @desk_phone.setter
    def desk_phone(self, desk_phone):
        """Sets the desk_phone of this SettingsSettingTypeBody5.


        :param desk_phone: The desk_phone of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeDeskPhone
        """

        self._desk_phone = desk_phone

    @property
    def dial_by_name(self):
        """Gets the dial_by_name of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The dial_by_name of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesitessiteIdsettingssettingTypeDialByName
        """
        return self._dial_by_name

    @dial_by_name.setter
    def dial_by_name(self, dial_by_name):
        """Sets the dial_by_name of this SettingsSettingTypeBody5.


        :param dial_by_name: The dial_by_name of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesitessiteIdsettingssettingTypeDialByName
        """

        self._dial_by_name = dial_by_name

    @property
    def billing_account(self):
        """Gets the billing_account of this SettingsSettingTypeBody5.  # noqa: E501


        :return: The billing_account of this SettingsSettingTypeBody5.  # noqa: E501
        :rtype: PhonesettingsBillingAccount
        """
        return self._billing_account

    @billing_account.setter
    def billing_account(self, billing_account):
        """Sets the billing_account of this SettingsSettingTypeBody5.


        :param billing_account: The billing_account of this SettingsSettingTypeBody5.  # noqa: E501
        :type: PhonesettingsBillingAccount
        """

        self._billing_account = billing_account

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SettingsSettingTypeBody5, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SettingsSettingTypeBody5):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
